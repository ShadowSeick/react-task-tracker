{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/Alert.js","components/AddTask.js","components/EditTask.js","components/About.js","components/TaskCalendarHeader.js","components/TasksForTaskCalendar.js","components/TaskCalendar.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","showFutureTasks","showPastTasks","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","onEdit","showEditTask","motion","div","reminder","onDoubleClick","id","initial","animate","exit","variants","hidden","x","opacity","visible","transition","duration","cursor","date","orderByDate","tasks","sort","taskA","taskB","taskA_Date","Date","objectDate","taskB_Date","getFullYear","getMonth","getDate","getTime","i","length","Tasks","today","toDateString","filter","map","Alert","alertText","translateX","AddTask","useState","setText","setDate","setReminder","showAlert","setShowAlert","setAlertText","y","translateY","onSubmit","e","preventDefault","completeDate","toLocaleDateString","toLocaleTimeString","type","placeholder","value","onChange","target","dateFormat","showTimeSelect","selected","checked","currentTarget","EditTask","taskToEdit","scaleY","About","TaskCalendarHeader","thisMonth","TasksForTaskCalendar","todayTasks","TaskCalendar","App","showAddTask","setShowAddTask","setShowEditTask","setShowFutureTasks","setShowPastTasks","setTasks","setTodayTasks","pastTasks","setPastTasks","futureTasks","setFutureTasks","setTaskToEdit","useEffect","getTasks","a","fetchTasks","tasksFromServer","updateTodayTasks","updateFutureTasks","updatePastTasks","getPastOrFutureTasks","futureOrPast","toLowerCase","taskDate","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","callEditToSelectedTask","editTask","updatedTasks","todayTask","deleteTask","toggleReminder","taskToToggle","updTask","path","exact","render","props","component","scaleX","delay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ae817c8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick, showFutureTasks, showPastTasks}) => {\r\n\r\n    return (\r\n        <div>\r\n            <button \r\n            onClick={onClick} \r\n            style={{backgroundColor: color}} \r\n            className= {`btn text-uppercase ${showFutureTasks || showPastTasks ? 'active' : ''}`}\r\n            >\r\n                {text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport { useLocation } from 'react-router';\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (<Button \r\n            color={showAdd ? 'red' : 'green'} \r\n            text={showAdd ? 'Close' : 'Add'} \r\n            onClick={onAdd}/>)}\r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS In JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black'\r\n//   }\r\n\r\nexport default Header\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes, FaEdit } from 'react-icons/fa';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Task = ({ task, onDelete, onToggle, onEdit, showEditTask }) => {\r\n    const variant= {\r\n        hidden: {x: -50,  opacity: 0},\r\n        visible: {x: 0, opacity: 1},\r\n        exit: {x:50, opacity: 0}\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n        className={`task ${task.reminder ? 'reminder' : ''} ${showEditTask ? 'highlighted' : ''}`} \r\n        onDoubleClick={() => onToggle(task.id)}\r\n        initial='hidden'\r\n        animate='visible'\r\n        exit='exit'\r\n        variants={variant}\r\n        transition={{duration: '0.5'}}\r\n        >\r\n            <h3 >\r\n                <div>\r\n                {task.text}\r\n                </div>\r\n                <div>\r\n                    <FaEdit style={{color: 'steelblue', cursor: 'pointer'}}\r\n                    onClick={() => onEdit(task.id)} className= 'me-1 click-button'/>\r\n                    <FaTimes style={{color: 'red', cursor: 'pointer'}}\r\n                    onClick={() => onDelete(task.id)} className='click-button'/>\r\n                </div>\r\n            </h3>\r\n            <p>{task.date}</p>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle, onEdit}) => {\r\n    const today = new Date().toDateString();\r\n\r\n    return (\r\n        <div className='col'>\r\n            {orderByDate(tasks)\r\n                .filter((task) => today !== new Date(task.objectDate).toDateString())\r\n                .map((task) => (\r\n                    <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} onEdit={onEdit}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst orderByDate = (tasks) => {\r\n    return tasks.sort((taskA, taskB) => {\r\n        let taskA_Date = new Date(taskA.objectDate);\r\n        let taskB_Date = new Date(taskB.objectDate);\r\n        taskA_Date = [taskA_Date.getFullYear(), taskA_Date.getMonth(), taskA_Date.getDate(), taskA_Date.getTime()]\r\n        taskB_Date = [taskB_Date.getFullYear(), taskB_Date.getMonth(), taskB_Date.getDate(), taskB_Date.getTime()]\r\n        for (let i = 0; i < taskA_Date.length; i++) {\r\n            if (taskA_Date[i] - taskB_Date[i] !== 0) return taskA_Date[i] - taskB_Date[i];\r\n        }\r\n        return taskA_Date[0] - taskB_Date[0];\r\n              })\r\n}\r\n\r\nexport default Tasks\r\n","import { motion } from \"framer-motion\"\r\n\r\nconst Alert = ({alertText}) => {\r\n    const variants = {\r\n        hidden: {opacity: 0, x: 30},\r\n        visible: {opacity: 1, translateX: -30}\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n        initial='hidden'\r\n        animate='visible'\r\n        variants={variants}\r\n        transition= {{duration: 0.2}}\r\n        className='text-warning'>\r\n            {alertText}\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import { useState } from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst AddTask = ( { onAdd } ) => {\r\n    const [text, setText] = useState('');    \r\n    const [date, setDate] = useState(new Date());    \r\n    const [reminder, setReminder] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertText, setAlertText] = useState('');\r\n    const maxTextLength = 40;   \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!text) {\r\n            setShowAlert(true);\r\n            setAlertText('Please add a task');\r\n            return\r\n        }\r\n\r\n        if (text.length > maxTextLength) {\r\n            setShowAlert(true);\r\n            setAlertText(\"The name task is too long. Only 25 characters long\");\r\n            return;\r\n        }\r\n        let completeDate = `${date.toLocaleDateString('es-ES')} ${date.toLocaleTimeString('en-US')}`;\r\n        onAdd({ text, date: completeDate, objectDate: date, reminder });\r\n\r\n        setText('');\r\n        setDate(new Date());\r\n        setReminder(false);\r\n        setShowAlert(false);\r\n    }\r\n\r\n    const variants = {\r\n        hidden: {opacity: 0.2, y: -25},\r\n        visible: {opacity: 1, translateY:25}\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n        initial='hidden'\r\n        animate='visible'\r\n        variants={variants}\r\n        transition={{duration: 0.2}}\r\n        >\r\n        <h2>Add Task</h2>\r\n        {showAlert && <Alert alertText={alertText}/>}\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                type='text' \r\n                placeholder='Add Task' \r\n                value={text} \r\n                onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <ReactDatePicker \r\n                dateFormat= \"MMM d, yyyy h:mmaa\"\r\n                showTimeSelect\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                />\r\n                \r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                type='checkbox' \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value='saveTask' className='btn btn-block' />\r\n        </form>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst EditTask = ( { onEdit, taskToEdit } ) => {\r\n    const [text, setText] = useState(taskToEdit.text);    \r\n    const [date, setDate] = useState(new Date(taskToEdit.objectDate));    \r\n    const [reminder, setReminder] = useState(taskToEdit.reminder);    \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let completeDate = `${date.toLocaleDateString('es-ES')} ${date.toLocaleTimeString('en-US')}`;\r\n        onEdit({ text, date: completeDate, objectDate: date, reminder });\r\n        \r\n    }\r\n\r\n    const variants = {\r\n        hidden: {opacity: 0.2, y: 75},\r\n        visible: {opacity: 1, translateY:-75, scaleY: 1}\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n        initial= 'hidden'\r\n        animate= 'visible'\r\n        variants={variants}\r\n        transition={{duration: 0.20}}\r\n        >\r\n        <h2>Edit Task</h2>\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                type='text' \r\n                placeholder='Add Task' \r\n                value={text} \r\n                onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <ReactDatePicker \r\n                dateFormat= \"MMM d, yyyy h:mmaa\"\r\n                showTimeSelect\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                />\r\n                \r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                type='checkbox' \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value='saveTask' className='btn btn-block' />\r\n        </form>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default EditTask","import { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","export const TaskCalendarHeader = () => {\r\n    const date = new Date();\r\n    const today = date.getDate();\r\n    const month = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\r\n    const thisMonth = month[date.getMonth()];\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className='text-uppercase text-center'>{`${today} ${thisMonth}`}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Task from \"./Task\";\r\n\r\nexport const TasksForTaskCalendar = ({todayTasks, onDelete, onToggle, onEdit}) => {\r\n    return (\r\n        <div>\r\n            <>\r\n                {todayTasks.sort((taskA, taskB) => new Date(taskA.objectDate).getTime() - new Date(taskB.objectDate).getTime())\r\n                            .map((task) => (\r\n                                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} onEdit={onEdit}/>\r\n                ))}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {TaskCalendarHeader} from \"./TaskCalendarHeader\";\r\nimport {TasksForTaskCalendar} from \"./TasksForTaskCalendar\";\r\n\r\nexport const TaskCalendar = ({todayTasks, onDelete, onToggle, onEdit}) => {\r\n    return (\r\n        <div>\r\n            <TaskCalendarHeader/>\r\n            {todayTasks.length > 0 ? <TasksForTaskCalendar todayTasks={todayTasks} onDelete={onDelete} onEdit={onEdit} onToggle={onToggle} /> : 'There are no tasks for today'}\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Footer from './components/Footer';\nimport Tasks from \"./components/Tasks\";\nimport AddTask from './components/AddTask';\nimport EditTask from './components/EditTask';\nimport About from './components/About';\nimport Button from './components/Button';\nimport { TaskCalendar } from './components/TaskCalendar';\nimport { motion } from 'framer-motion';\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showEditTask, setShowEditTask] = useState(false);\n  const [showFutureTasks, setShowFutureTasks] = useState(true);\n  const [showPastTasks, setShowPastTasks] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [todayTasks, setTodayTasks] = useState([]);\n  const [pastTasks, setPastTasks] = useState([]);\n  const [futureTasks, setFutureTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState({});\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n      updateTodayTasks(tasksFromServer);\n      updateFutureTasks(tasksFromServer);\n      updatePastTasks(tasksFromServer);\n    }\n\n    getTasks();\n  }, []);\n\n\n  // If true pass Future tasks, if false pass past tasks\n  const getPastOrFutureTasks = (tasks, futureOrPast) => {\n    let today = new Date();\n    today = [today.getFullYear(), today.getMonth(), today.getDate()]\n\n    futureOrPast = futureOrPast.toLowerCase() === 'future' ? true :\n                   futureOrPast.toLowerCase() === 'past' ? false :\n                   null;\n\n    return tasks.filter((task) => {\n      let taskDate = new Date(task.objectDate);\n      taskDate = [taskDate.getFullYear(), taskDate.getMonth(), taskDate.getDate()]\n      for (let i = 0; i < taskDate.length; i++) {\n          if (taskDate[i] > today[i]) return futureOrPast;\n      }\n      return !futureOrPast;\n    })\n  } \n\n\n  const updateTodayTasks = (tasks) => {\n    const today = new Date().toDateString();\n    setTodayTasks(tasks.filter((task) => today === new Date(task.objectDate).toDateString()))\n  }\n\n  const updateFutureTasks = (tasks) => {\n    setFutureTasks(getPastOrFutureTasks(tasks, 'future'));\n  }\n\n  const updatePastTasks = (tasks) => {\n    setPastTasks(getPastOrFutureTasks(tasks, 'past'));\n  }\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n\n    return data;\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  }\n\n  // Call Add Task\n  const callAddTask = () => {\n    if (showEditTask) setShowEditTask(!showEditTask);\n    setShowAddTask(!showAddTask);\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n\n    \n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n    updateTodayTasks([...todayTasks, data]);\n    updateFutureTasks([...futureTasks, data]);\n    updatePastTasks([...pastTasks, data]);\n  }\n\n  // Call Edit Task\n  const callEditToSelectedTask = async (id) => {\n    const task = await fetchTask(id);\n    setTaskToEdit(task);\n    \n    if (showAddTask) setShowAddTask(!showAddTask);\n    setShowEditTask(!showEditTask);\n  }\n\n  // Edit Task\n  const editTask = async (task) => {\n    const id = taskToEdit.id;\n    \n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'PUT',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n\n    const updatedTasks = todayTasks.map((todayTask) => todayTask.id === id ? data : task);\n\n    setTasks(updatedTasks);\n    updateTodayTasks(updatedTasks);\n    updateFutureTasks(updatedTasks);\n    updatePastTasks(updatedTasks)\n    setShowEditTask(false);  \n    \n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, \n    { method: 'DELETE' })\n\n    const updatedTasks = tasks.filter((task) => task.id !== id )\n\n    setTasks(updatedTasks);\n    updateTodayTasks(updatedTasks);\n    updateFutureTasks(updatedTasks);\n    updatePastTasks(updatedTasks);\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    \n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {'Content-type' : 'application/json'},\n      body: JSON.stringify(updTask)\n    });\n\n    const data = await res.json();\n\n    const updatedTasks = tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task);\n\n    setTasks(updatedTasks);\n    updateTodayTasks(updatedTasks);\n    updateFutureTasks(updatedTasks);\n    updatePastTasks(updatedTasks);\n  }\n\n  const variantsForMainTask = {\n    hidden: {opacity: 0.2, y: -200, scaleY: 0.5},\n    visible: {opacity: 1, translateY:200, scaleY: 1}\n  }\n\n  const variantsForCalendar = {\n    hidden: {opacity:0, x: -200, scaleX: 0.5},\n    visible: {opacity: 1, translateX:200, scaleX: 1}\n  }\n\n\n\n  return (\n    <Router>\n      <div className='container'>\n        <div className='row'>\n          <motion.div className='col border-rounded'\n          initial='hidden'\n          animate='visible'\n          variants={variantsForMainTask}\n          >\n          <Header onAdd={callAddTask} showAdd={showAddTask}/>\n          <Route path='/react-task-tracker/' exact render={(props) => (\n            <>\n              {showAddTask && !showEditTask && <AddTask onAdd={addTask}/>}\n              {showEditTask && !showAddTask && <EditTask onEdit={editTask}/>}\n            </>\n          )} />\n          <Route path='/react-task-tracker/about' component={About}/>\n          <Footer/>\n          </motion.div>\n          <motion.div className='col border-rounded'\n          initial='hidden'\n          animate='visible'\n          variants={variantsForCalendar}\n          transition={{delay: 1}}\n          >\n            <TaskCalendar todayTasks={todayTasks} onDelete={deleteTask} onEdit={callEditToSelectedTask} onToggle={toggleReminder} showEditTask={showEditTask} />\n          </motion.div>\n          <div className='col-12 '>\n            <div className='row border-rounded p-5'>\n            <div className='col-12'>\n               \n              <div className={`row ${showFutureTasks && showPastTasks ? 'space-between' : ''}`}>\n                <Button text={'future tasks'} color={'green'} onClick={() => setShowFutureTasks(!showFutureTasks)} showFutureTasks={showFutureTasks} />\n                <Button text={'pasts tasks'} color={'green'} onClick={() => setShowPastTasks(!showPastTasks)} showPastTasks={showPastTasks} />\n              </div> \n            </div>\n              {showFutureTasks && showPastTasks && tasks.length > 0 ?\n                <>\n                    <Tasks tasks={futureTasks} onDelete={deleteTask} onToggle={toggleReminder} onEdit={callEditToSelectedTask} showEditTask={showEditTask} />\n                    <Tasks tasks={pastTasks} onDelete={deleteTask} onToggle={toggleReminder} onEdit={callEditToSelectedTask} showEditTask={showEditTask} />\n                </>\n                : showFutureTasks && tasks.length > 0 ? \n                <Tasks tasks={futureTasks} onDelete={deleteTask} onToggle={toggleReminder} onEdit={callEditToSelectedTask} showEditTask={showEditTask} /> : \n                showPastTasks && tasks.length > 0 ? \n                <Tasks tasks={pastTasks} onDelete={deleteTask} onToggle={toggleReminder} onEdit={callEditToSelectedTask} showEditTask={showEditTask} /> : (\"\")}\n            </div>\n          </div>\n        </div>\n    </div>\n    </Router>\n  );\n}\n\nHeader.defaultProps = {\n  title : 'Task Tracker'\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}